// Generate this file: npx prisma introspect
// Format: npx prisma-schema-transformer [path to this file]
// Generate client: npx prisma generate

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Band {
  id           Int           @id @default(autoincrement())
  name         String
  color        String
  buzz         Int
  level        Int           @default(1)
  entries      Entry[]       @relation(name: "bandToentry")
  performances Performance[] @relation(name: "bandToperformance")
  songs        Song[]        @relation(name: "bandTosong")

  @@map("band")
}

model Battle {
  id      Int     @id @default(autoincrement())
  weekId  Int     @map("week_id")
  level   Int
  week    Week    @relation(name: "battleToweek", fields: [weekId], references: [id])
  entries Entry[] @relation(name: "battleToentry")
  rounds  Round[] @relation(name: "battleToround")

  @@map("battle")
}

model Entry {
  battleId    Int    @map("battle_id")
  bandId      Int    @map("band_id")
  buzzStart   Int    @map("buzz_start")
  place       Int?
  buzzAwarded Int?   @map("buzz_awarded")
  band        Band   @relation(name: "bandToentry", fields: [bandId], references: [id])
  battle      Battle @relation(name: "battleToentry", fields: [battleId], references: [id])

  @@id([battleId, bandId])
  @@map("entry")
}

model Performance {
  battleId   Int   @map("battle_id")
  roundIndex Int   @map("round_index")
  bandId     Int   @map("band_id")
  songId     Int   @map("song_id")
  score      Int
  band       Band  @relation(name: "bandToperformance", fields: [bandId], references: [id])
  round      Round @relation(name: "performanceToround", fields: [battleId, roundIndex], references: [battleId, index])
  song       Song  @relation(name: "performanceTosong", fields: [songId], references: [id])

  @@id([battleId, roundIndex, bandId])
  @@map("performance")
}

model Round {
  battleId     Int           @map("battle_id")
  index        Int           @default(autoincrement())
  battle       Battle        @relation(name: "battleToround", fields: [battleId], references: [id])
  performances Performance[] @relation(name: "performanceToround")

  @@id([battleId, index])
  @@map("round")
}

model Song {
  id           Int           @id @default(autoincrement())
  bandId       Int           @map("band_id")
  name         String
  band         Band          @relation(name: "bandTosong", fields: [bandId], references: [id])
  performances Performance[] @relation(name: "performanceTosong")

  @@map("song")
}

model Week {
  id      Int      @id @default(autoincrement())
  battles Battle[] @relation(name: "battleToweek")

  @@map("week")
}

model WeeklyBuzz {
  weekId Int @map("week_id")
  bandId Int @map("band_id")
  buzz   Int

  @@id([weekId, bandId])
  @@map("weekly_buzz")
}
